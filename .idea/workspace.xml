<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6fd9e70c-4db5-4f13-b88a-8b833b90716e" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$/media-service" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
    <option name="ROOT_SYNC" value="SYNC" />
  </component>
  <component name="KubernetesApiProvider">{
  &quot;contexts&quot;: [
    {
      &quot;name&quot;: &quot;client&quot;
    }
  ],
  &quot;isMigrated&quot;: true
}</component>
  <component name="KubernetesSettings">
    <option name="contextName" value="client" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2f1B5Ew9l2Ntxd4UmjPMagm6ySw" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.auth-service.auth-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.auth-service.database: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.auth-service.local-broker: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.auth-service.local-zookeeper: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.auth-service.zipkin: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.auth-service.zookeeper: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.media-service.media-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.metadata-service.metadata-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.mordent-frontend.frontend: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.mordent-local.nginx: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/pro100user/Projects/mordent&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RunManager" selected="Docker.mordent-frontend.frontend: Compose Deployment">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="auth-service.auth-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="auth-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="auth-service/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="media-service.media-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="media-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="media-service/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="metadata-service.metadata-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="metadata-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="metadata-service/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="mordent-frontend.frontend: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="frontend" />
            </list>
          </option>
          <option name="sourceFilePath" value="mordent-frontend/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="mordent-local.nginx: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="nginx" />
            </list>
          </option>
          <option name="sourceFilePath" value="mordent-local/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.mordent-frontend.frontend: Compose Deployment" />
        <item itemvalue="Docker.mordent-local.nginx: Compose Deployment" />
        <item itemvalue="Docker.metadata-service.metadata-service: Compose Deployment" />
        <item itemvalue="Docker.media-service.media-service: Compose Deployment" />
        <item itemvalue="Docker.auth-service.auth-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6fd9e70c-4db5-4f13-b88a-8b833b90716e" name="Changes" comment="" />
      <created>1712958519345</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712958519345</updated>
      <workItem from="1712958520615" duration="3525000" />
      <workItem from="1712990778178" duration="71000" />
      <workItem from="1712990853240" duration="24000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>